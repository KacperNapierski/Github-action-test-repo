# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      run: ./gradlew build

  contanarize:
    runs-on: self-hosted
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: contenarize
      run: sudo docker build -t java-app .

#  deploy:
#    runs-on: self-hosted
#    needs: contanarize
#    steps:
#    - name: ssh deploy
#      uses: easingthemes/ssh-deploy@v2.1.4
#      with:
#        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#        REMOTE_HOST: ${{ secrets.SSH_HOST }}
#        REMOTE_USER: ${{ secrets.SSH_USER }}
#        REMOTE_PORT: 22
#        SOURCE: "dist/"
#        TARGET: ${{ secrets.WORK_DIR }}
          
    
